// <auto-generated />
using System;
using Eawv.Service.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Eawv.Service.Migrations
{
    [DbContext(typeof(EawvContext))]
    [Migration("20181204103139_fix-enums-and-fks")]
    partial class Fixenumsandfks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.BallotDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<byte[]>("Document")
                        .IsRequired();

                    b.Property<Guid>("ElectionFk");

                    b.Property<Guid?>("ListId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ElectionFk");

                    b.HasIndex("ListId");

                    b.ToTable("BallotDocuments");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("CallName")
                        .IsRequired();

                    b.Property<Guid?>("CandidateFk");

                    b.Property<string>("CandidateReference")
                        .IsRequired();

                    b.Property<string>("CandidateTextInfo")
                        .IsRequired();

                    b.Property<Guid>("CountryFk");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("DwellingNumber");

                    b.Property<string>("FamilyName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("HouseNumber");

                    b.Property<bool>("Incumbent");

                    b.Property<Guid?>("ListFk");

                    b.Property<string>("Locality");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("OccupationalTitle");

                    b.Property<string>("Origin");

                    b.Property<string>("PartyTenantId")
                        .IsRequired();

                    b.Property<int>("Sex");

                    b.Property<int>("State");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.Property<string>("Town")
                        .IsRequired();

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CountryFk");

                    b.HasIndex("ListFk");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IsoName")
                        .IsRequired();

                    b.Property<string>("ShortName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.DomainOfInfluence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("DomainOfInfluenceType");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OfficialId");

                    b.Property<string>("ShortName")
                        .IsRequired();

                    b.Property<string>("TenantId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("DomainsOfInfluence");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.DomainOfInfluenceElection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("DomainOfInfluenceFk");

                    b.Property<Guid>("ElectionFk");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int>("NumberOfMandates");

                    b.HasKey("Id");

                    b.HasIndex("DomainOfInfluenceFk");

                    b.HasIndex("ElectionFk");

                    b.ToTable("DomainOfInfluenceElections");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ContestDate");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<int>("ElectionType");

                    b.Property<bool>("FileUploadActivated");

                    b.Property<string>("FileUploadDescription");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("NoQuorumRequired");

                    b.Property<int>("State");

                    b.Property<DateTime>("SubmissionDeadlineBegin");

                    b.Property<DateTime>("SubmissionDeadlineEnd");

                    b.Property<string>("TenantId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ElectionQuorumExemption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("ElectionFk");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("PartyTenantId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ElectionFk");

                    b.ToTable("ElectionQuorumExemptions");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.InfoText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid?>("ElectionFk");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Language")
                        .IsRequired();

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.Property<bool>("Visible");

                    b.HasKey("Id");

                    b.HasIndex("ElectionFk");

                    b.ToTable("InfoTexts");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.List", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<Guid>("ElectionFk");

                    b.Property<int>("Indenture");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("ResponsiblePartyTenantId")
                        .IsRequired();

                    b.Property<int>("SortOrder");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("ElectionFk");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("ListFk");

                    b.Property<string>("ListUnionDescription");

                    b.Property<Guid>("ListUnionFk");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("ListFk");

                    b.HasIndex("ListUnionFk");

                    b.ToTable("ListUnions");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnionElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("ListFk");

                    b.Property<Guid>("ListUnionFk");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("ListFk");

                    b.HasIndex("ListUnionFk");

                    b.ToTable("ListUnionElements");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.MarkedElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<Guid>("ReferenceId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MarkedElements");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.BallotDocument", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("Documents")
                        .HasForeignKey("ElectionFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.List")
                        .WithMany("ElectionDocuments")
                        .HasForeignKey("ListId");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Candidate", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Country", "Country")
                        .WithMany("Candidates")
                        .HasForeignKey("CountryFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.List", "List")
                        .WithMany("Candidates")
                        .HasForeignKey("ListFk")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.DomainOfInfluenceElection", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.DomainOfInfluence", "DomainOfInfluence")
                        .WithMany("ParticipatingElections")
                        .HasForeignKey("DomainOfInfluenceFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("DomainsOfInfluence")
                        .HasForeignKey("ElectionFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ElectionQuorumExemption", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("QuorumExemptions")
                        .HasForeignKey("ElectionFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.InfoText", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("InfoTexts")
                        .HasForeignKey("ElectionFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.List", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("Lists")
                        .HasForeignKey("ElectionFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnion", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.List", "ReferencedList")
                        .WithMany("ListUnions")
                        .HasForeignKey("ListFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.ListUnion", "ReferencedUnion")
                        .WithMany("ListUnionParticipations")
                        .HasForeignKey("ListUnionFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnionElement", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.List", "ReferencedList")
                        .WithMany("ListUnionElements")
                        .HasForeignKey("ListFk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.ListUnion", "ReferencedUnion")
                        .WithMany("ListUnionElements")
                        .HasForeignKey("ListUnionFk")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
