// <auto-generated />
using System;
using System.Collections.Generic;
using Eawv.Service.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Eawv.Service.Migrations
{
    [DbContext(typeof(EawvContext))]
    [Migration("20181206144255_DOIUniqueKey")]
    partial class DOIUniqueKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.BallotDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<byte[]>("Document")
                        .IsRequired();

                    b.Property<Guid>("ElectionId");

                    b.Property<Guid?>("ListId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.HasIndex("ListId");

                    b.ToTable("BallotDocuments");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Candidate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("CallName")
                        .IsRequired();

                    b.Property<Guid?>("CandidateId");

                    b.Property<string>("CandidateReference")
                        .IsRequired();

                    b.Property<string>("CandidateTextInfo")
                        .IsRequired();

                    b.Property<Guid>("CountryId");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("DwellingNumber");

                    b.Property<string>("FamilyName")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("HouseNumber");

                    b.Property<bool>("Incumbent");

                    b.Property<Guid?>("ListId");

                    b.Property<string>("Locality");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("OccupationalTitle");

                    b.Property<string>("Origin");

                    b.Property<string>("PartyTenantId")
                        .IsRequired();

                    b.Property<int>("Sex");

                    b.Property<int>("State");

                    b.Property<string>("Street")
                        .IsRequired();

                    b.Property<string>("Town")
                        .IsRequired();

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("ListId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IsoName")
                        .IsRequired();

                    b.Property<string>("ShortName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("IsoName");

                    b.ToTable("Countries");

                    b.HasData(
                        new { Id = new Guid("00004641-0000-0000-0000-000000000000"), IsoName = "AF", ShortName = "Afghanistan" },
                        new { Id = new Guid("00004745-0000-0000-0000-000000000000"), IsoName = "EG", ShortName = "Ägypten" },
                        new { Id = new Guid("00004c41-0000-0000-0000-000000000000"), IsoName = "AL", ShortName = "Albanien" },
                        new { Id = new Guid("00005a44-0000-0000-0000-000000000000"), IsoName = "DZ", ShortName = "Algerien" },
                        new { Id = new Guid("00004441-0000-0000-0000-000000000000"), IsoName = "AD", ShortName = "Andorra" },
                        new { Id = new Guid("00004f41-0000-0000-0000-000000000000"), IsoName = "AO", ShortName = "Angola" },
                        new { Id = new Guid("00004741-0000-0000-0000-000000000000"), IsoName = "AG", ShortName = "Antigua und Barbuda" },
                        new { Id = new Guid("00005147-0000-0000-0000-000000000000"), IsoName = "GQ", ShortName = "Äquatorialguinea" },
                        new { Id = new Guid("00005241-0000-0000-0000-000000000000"), IsoName = "AR", ShortName = "Argentinien" },
                        new { Id = new Guid("00004d41-0000-0000-0000-000000000000"), IsoName = "AM", ShortName = "Armenien" },
                        new { Id = new Guid("00005a41-0000-0000-0000-000000000000"), IsoName = "AZ", ShortName = "Aserbaidschan" },
                        new { Id = new Guid("00005445-0000-0000-0000-000000000000"), IsoName = "ET", ShortName = "Äthiopien" },
                        new { Id = new Guid("00005541-0000-0000-0000-000000000000"), IsoName = "AU", ShortName = "Australien" },
                        new { Id = new Guid("00005342-0000-0000-0000-000000000000"), IsoName = "BS", ShortName = "Bahamas" },
                        new { Id = new Guid("00004842-0000-0000-0000-000000000000"), IsoName = "BH", ShortName = "Bahrain" },
                        new { Id = new Guid("00004442-0000-0000-0000-000000000000"), IsoName = "BD", ShortName = "Bangladesch" },
                        new { Id = new Guid("00004242-0000-0000-0000-000000000000"), IsoName = "BB", ShortName = "Barbados" },
                        new { Id = new Guid("00005942-0000-0000-0000-000000000000"), IsoName = "BY", ShortName = "Weißrussland" },
                        new { Id = new Guid("00004542-0000-0000-0000-000000000000"), IsoName = "BE", ShortName = "Belgien" },
                        new { Id = new Guid("00005a42-0000-0000-0000-000000000000"), IsoName = "BZ", ShortName = "Belize" },
                        new { Id = new Guid("00004a42-0000-0000-0000-000000000000"), IsoName = "BJ", ShortName = "Benin" },
                        new { Id = new Guid("00005442-0000-0000-0000-000000000000"), IsoName = "BT", ShortName = "Bhutan" },
                        new { Id = new Guid("00004f42-0000-0000-0000-000000000000"), IsoName = "BO", ShortName = "Bolivien" },
                        new { Id = new Guid("00004142-0000-0000-0000-000000000000"), IsoName = "BA", ShortName = "Bosnien und Herzegowina" },
                        new { Id = new Guid("00005742-0000-0000-0000-000000000000"), IsoName = "BW", ShortName = "Botswana" },
                        new { Id = new Guid("00005242-0000-0000-0000-000000000000"), IsoName = "BR", ShortName = "Brasilien" },
                        new { Id = new Guid("00004e42-0000-0000-0000-000000000000"), IsoName = "BN", ShortName = "Brunei" },
                        new { Id = new Guid("00004742-0000-0000-0000-000000000000"), IsoName = "BG", ShortName = "Bulgarien" },
                        new { Id = new Guid("00004642-0000-0000-0000-000000000000"), IsoName = "BF", ShortName = "Burkina Faso" },
                        new { Id = new Guid("00004942-0000-0000-0000-000000000000"), IsoName = "BI", ShortName = "Burundi" },
                        new { Id = new Guid("00004c43-0000-0000-0000-000000000000"), IsoName = "CL", ShortName = "Chile" },
                        new { Id = new Guid("00004e43-0000-0000-0000-000000000000"), IsoName = "CN", ShortName = "Volksrepublik China" },
                        new { Id = new Guid("00005243-0000-0000-0000-000000000000"), IsoName = "CR", ShortName = "Costa Rica" },
                        new { Id = new Guid("00004943-0000-0000-0000-000000000000"), IsoName = "CI", ShortName = "Elfenbeinküste" },
                        new { Id = new Guid("00004b44-0000-0000-0000-000000000000"), IsoName = "DK", ShortName = "Dänemark" },
                        new { Id = new Guid("00004544-0000-0000-0000-000000000000"), IsoName = "DE", ShortName = "Deutschland" },
                        new { Id = new Guid("00004d44-0000-0000-0000-000000000000"), IsoName = "DM", ShortName = "Dominica" },
                        new { Id = new Guid("00004f44-0000-0000-0000-000000000000"), IsoName = "DO", ShortName = "Dominikanische Republik" },
                        new { Id = new Guid("00004a44-0000-0000-0000-000000000000"), IsoName = "DJ", ShortName = "Dschibuti" },
                        new { Id = new Guid("00004345-0000-0000-0000-000000000000"), IsoName = "EC", ShortName = "Ecuador" },
                        new { Id = new Guid("00005653-0000-0000-0000-000000000000"), IsoName = "SV", ShortName = "El Salvador" },
                        new { Id = new Guid("00005245-0000-0000-0000-000000000000"), IsoName = "ER", ShortName = "Eritrea" },
                        new { Id = new Guid("00004545-0000-0000-0000-000000000000"), IsoName = "EE", ShortName = "Estland" },
                        new { Id = new Guid("00004a46-0000-0000-0000-000000000000"), IsoName = "FJ", ShortName = "Fidschi" },
                        new { Id = new Guid("00004946-0000-0000-0000-000000000000"), IsoName = "FI", ShortName = "Finnland" },
                        new { Id = new Guid("00005246-0000-0000-0000-000000000000"), IsoName = "FR", ShortName = "Frankreich" },
                        new { Id = new Guid("00004147-0000-0000-0000-000000000000"), IsoName = "GA", ShortName = "Gabun" },
                        new { Id = new Guid("00004d47-0000-0000-0000-000000000000"), IsoName = "GM", ShortName = "Gambia" },
                        new { Id = new Guid("00004547-0000-0000-0000-000000000000"), IsoName = "GE", ShortName = "Georgien" },
                        new { Id = new Guid("00004847-0000-0000-0000-000000000000"), IsoName = "GH", ShortName = "Ghana" },
                        new { Id = new Guid("00004447-0000-0000-0000-000000000000"), IsoName = "GD", ShortName = "Grenada" },
                        new { Id = new Guid("00005247-0000-0000-0000-000000000000"), IsoName = "GR", ShortName = "Griechenland" },
                        new { Id = new Guid("00005447-0000-0000-0000-000000000000"), IsoName = "GT", ShortName = "Guatemala" },
                        new { Id = new Guid("00004e47-0000-0000-0000-000000000000"), IsoName = "GN", ShortName = "Guinea" },
                        new { Id = new Guid("00005747-0000-0000-0000-000000000000"), IsoName = "GW", ShortName = "Guinea-Bissau" },
                        new { Id = new Guid("00005947-0000-0000-0000-000000000000"), IsoName = "GY", ShortName = "Guyana" },
                        new { Id = new Guid("00005448-0000-0000-0000-000000000000"), IsoName = "HT", ShortName = "Haiti" },
                        new { Id = new Guid("00004e48-0000-0000-0000-000000000000"), IsoName = "HN", ShortName = "Honduras" },
                        new { Id = new Guid("00004e49-0000-0000-0000-000000000000"), IsoName = "IN", ShortName = "Indien" },
                        new { Id = new Guid("00004449-0000-0000-0000-000000000000"), IsoName = "ID", ShortName = "Indonesien" },
                        new { Id = new Guid("00005149-0000-0000-0000-000000000000"), IsoName = "IQ", ShortName = "Irak" },
                        new { Id = new Guid("00005249-0000-0000-0000-000000000000"), IsoName = "IR", ShortName = "Iran" },
                        new { Id = new Guid("00004549-0000-0000-0000-000000000000"), IsoName = "IE", ShortName = "Irland" },
                        new { Id = new Guid("00005349-0000-0000-0000-000000000000"), IsoName = "IS", ShortName = "Island" },
                        new { Id = new Guid("00004c49-0000-0000-0000-000000000000"), IsoName = "IL", ShortName = "Israel" },
                        new { Id = new Guid("00005449-0000-0000-0000-000000000000"), IsoName = "IT", ShortName = "Italien" },
                        new { Id = new Guid("00004d4a-0000-0000-0000-000000000000"), IsoName = "JM", ShortName = "Jamaika" },
                        new { Id = new Guid("0000504a-0000-0000-0000-000000000000"), IsoName = "JP", ShortName = "Japan" },
                        new { Id = new Guid("00004559-0000-0000-0000-000000000000"), IsoName = "YE", ShortName = "Jemen" },
                        new { Id = new Guid("00004f4a-0000-0000-0000-000000000000"), IsoName = "JO", ShortName = "Jordanien" },
                        new { Id = new Guid("0000484b-0000-0000-0000-000000000000"), IsoName = "KH", ShortName = "Kambodscha" },
                        new { Id = new Guid("00004d43-0000-0000-0000-000000000000"), IsoName = "CM", ShortName = "Kamerun" },
                        new { Id = new Guid("00004143-0000-0000-0000-000000000000"), IsoName = "CA", ShortName = "Kanada" },
                        new { Id = new Guid("00005643-0000-0000-0000-000000000000"), IsoName = "CV", ShortName = "Kap Verde" },
                        new { Id = new Guid("00005a4b-0000-0000-0000-000000000000"), IsoName = "KZ", ShortName = "Kasachstan" },
                        new { Id = new Guid("00004151-0000-0000-0000-000000000000"), IsoName = "QA", ShortName = "Katar" },
                        new { Id = new Guid("0000454b-0000-0000-0000-000000000000"), IsoName = "KE", ShortName = "Kenia" },
                        new { Id = new Guid("0000474b-0000-0000-0000-000000000000"), IsoName = "KG", ShortName = "Kirgisistan" },
                        new { Id = new Guid("0000494b-0000-0000-0000-000000000000"), IsoName = "KI", ShortName = "Kiribati" },
                        new { Id = new Guid("00004f43-0000-0000-0000-000000000000"), IsoName = "CO", ShortName = "Kolumbien" },
                        new { Id = new Guid("00004d4b-0000-0000-0000-000000000000"), IsoName = "KM", ShortName = "Komoren" },
                        new { Id = new Guid("00004443-0000-0000-0000-000000000000"), IsoName = "CD", ShortName = "Kongo, Demokratische Republik" },
                        new { Id = new Guid("00004743-0000-0000-0000-000000000000"), IsoName = "CG", ShortName = "Kongo, Republik" },
                        new { Id = new Guid("0000504b-0000-0000-0000-000000000000"), IsoName = "KP", ShortName = "Korea, Nord" },
                        new { Id = new Guid("0000524b-0000-0000-0000-000000000000"), IsoName = "KR", ShortName = "Korea, Süd" },
                        new { Id = new Guid("00005248-0000-0000-0000-000000000000"), IsoName = "HR", ShortName = "Kroatien" },
                        new { Id = new Guid("00005543-0000-0000-0000-000000000000"), IsoName = "CU", ShortName = "Kuba" },
                        new { Id = new Guid("0000574b-0000-0000-0000-000000000000"), IsoName = "KW", ShortName = "Kuwait" },
                        new { Id = new Guid("0000414c-0000-0000-0000-000000000000"), IsoName = "LA", ShortName = "Laos" },
                        new { Id = new Guid("0000534c-0000-0000-0000-000000000000"), IsoName = "LS", ShortName = "Lesotho" },
                        new { Id = new Guid("0000564c-0000-0000-0000-000000000000"), IsoName = "LV", ShortName = "Lettland" },
                        new { Id = new Guid("0000424c-0000-0000-0000-000000000000"), IsoName = "LB", ShortName = "Libanon" },
                        new { Id = new Guid("0000524c-0000-0000-0000-000000000000"), IsoName = "LR", ShortName = "Liberia" },
                        new { Id = new Guid("0000594c-0000-0000-0000-000000000000"), IsoName = "LY", ShortName = "Libyen" },
                        new { Id = new Guid("0000494c-0000-0000-0000-000000000000"), IsoName = "LI", ShortName = "Liechtenstein" },
                        new { Id = new Guid("0000544c-0000-0000-0000-000000000000"), IsoName = "LT", ShortName = "Litauen" },
                        new { Id = new Guid("0000554c-0000-0000-0000-000000000000"), IsoName = "LU", ShortName = "Luxemburg" },
                        new { Id = new Guid("0000474d-0000-0000-0000-000000000000"), IsoName = "MG", ShortName = "Madagaskar" },
                        new { Id = new Guid("0000574d-0000-0000-0000-000000000000"), IsoName = "MW", ShortName = "Malawi" },
                        new { Id = new Guid("0000594d-0000-0000-0000-000000000000"), IsoName = "MY", ShortName = "Malaysia" },
                        new { Id = new Guid("0000564d-0000-0000-0000-000000000000"), IsoName = "MV", ShortName = "Malediven" },
                        new { Id = new Guid("00004c4d-0000-0000-0000-000000000000"), IsoName = "ML", ShortName = "Mali" },
                        new { Id = new Guid("0000544d-0000-0000-0000-000000000000"), IsoName = "MT", ShortName = "Malta" },
                        new { Id = new Guid("0000414d-0000-0000-0000-000000000000"), IsoName = "MA", ShortName = "Marokko" },
                        new { Id = new Guid("0000484d-0000-0000-0000-000000000000"), IsoName = "MH", ShortName = "Marshallinseln" },
                        new { Id = new Guid("0000524d-0000-0000-0000-000000000000"), IsoName = "MR", ShortName = "Mauretanien" },
                        new { Id = new Guid("0000554d-0000-0000-0000-000000000000"), IsoName = "MU", ShortName = "Mauritius" },
                        new { Id = new Guid("00004b4d-0000-0000-0000-000000000000"), IsoName = "MK", ShortName = "Mazedonien" },
                        new { Id = new Guid("0000584d-0000-0000-0000-000000000000"), IsoName = "MX", ShortName = "Mexiko" },
                        new { Id = new Guid("00004d46-0000-0000-0000-000000000000"), IsoName = "FM", ShortName = "Mikronesien" },
                        new { Id = new Guid("0000444d-0000-0000-0000-000000000000"), IsoName = "MD", ShortName = "Moldau" },
                        new { Id = new Guid("0000434d-0000-0000-0000-000000000000"), IsoName = "MC", ShortName = "Monaco" },
                        new { Id = new Guid("00004e4d-0000-0000-0000-000000000000"), IsoName = "MN", ShortName = "Mongolei" },
                        new { Id = new Guid("0000454d-0000-0000-0000-000000000000"), IsoName = "ME", ShortName = "Montenegro" },
                        new { Id = new Guid("00005a4d-0000-0000-0000-000000000000"), IsoName = "MZ", ShortName = "Mosambik" },
                        new { Id = new Guid("00004d4d-0000-0000-0000-000000000000"), IsoName = "MM", ShortName = "Myanmar" },
                        new { Id = new Guid("0000414e-0000-0000-0000-000000000000"), IsoName = "NA", ShortName = "Namibia" },
                        new { Id = new Guid("0000524e-0000-0000-0000-000000000000"), IsoName = "NR", ShortName = "Nauru" },
                        new { Id = new Guid("0000504e-0000-0000-0000-000000000000"), IsoName = "NP", ShortName = "Nepal" },
                        new { Id = new Guid("00005a4e-0000-0000-0000-000000000000"), IsoName = "NZ", ShortName = "Neuseeland" },
                        new { Id = new Guid("0000494e-0000-0000-0000-000000000000"), IsoName = "NI", ShortName = "Nicaragua" },
                        new { Id = new Guid("00004c4e-0000-0000-0000-000000000000"), IsoName = "NL", ShortName = "Niederlande" },
                        new { Id = new Guid("0000454e-0000-0000-0000-000000000000"), IsoName = "NE", ShortName = "Niger" },
                        new { Id = new Guid("0000474e-0000-0000-0000-000000000000"), IsoName = "NG", ShortName = "Nigeria" },
                        new { Id = new Guid("00004f4e-0000-0000-0000-000000000000"), IsoName = "NO", ShortName = "Norwegen" },
                        new { Id = new Guid("00004d4f-0000-0000-0000-000000000000"), IsoName = "OM", ShortName = "Oman" },
                        new { Id = new Guid("00005441-0000-0000-0000-000000000000"), IsoName = "AT", ShortName = "Österreich" },
                        new { Id = new Guid("00004c54-0000-0000-0000-000000000000"), IsoName = "TL", ShortName = "Osttimor" },
                        new { Id = new Guid("00004b50-0000-0000-0000-000000000000"), IsoName = "PK", ShortName = "Pakistan" },
                        new { Id = new Guid("00005750-0000-0000-0000-000000000000"), IsoName = "PW", ShortName = "Palau" },
                        new { Id = new Guid("00004150-0000-0000-0000-000000000000"), IsoName = "PA", ShortName = "Panama" },
                        new { Id = new Guid("00004750-0000-0000-0000-000000000000"), IsoName = "PG", ShortName = "Papua-Neuguinea" },
                        new { Id = new Guid("00005950-0000-0000-0000-000000000000"), IsoName = "PY", ShortName = "Paraguay" },
                        new { Id = new Guid("00004550-0000-0000-0000-000000000000"), IsoName = "PE", ShortName = "Peru" },
                        new { Id = new Guid("00004850-0000-0000-0000-000000000000"), IsoName = "PH", ShortName = "Philippinen" },
                        new { Id = new Guid("00004c50-0000-0000-0000-000000000000"), IsoName = "PL", ShortName = "Polen" },
                        new { Id = new Guid("00005450-0000-0000-0000-000000000000"), IsoName = "PT", ShortName = "Portugal" },
                        new { Id = new Guid("00005752-0000-0000-0000-000000000000"), IsoName = "RW", ShortName = "Ruanda" },
                        new { Id = new Guid("00004f52-0000-0000-0000-000000000000"), IsoName = "RO", ShortName = "Rumänien" },
                        new { Id = new Guid("00005552-0000-0000-0000-000000000000"), IsoName = "RU", ShortName = "Russland" },
                        new { Id = new Guid("00004253-0000-0000-0000-000000000000"), IsoName = "SB", ShortName = "Salomonen" },
                        new { Id = new Guid("00004d5a-0000-0000-0000-000000000000"), IsoName = "ZM", ShortName = "Sambia" },
                        new { Id = new Guid("00005357-0000-0000-0000-000000000000"), IsoName = "WS", ShortName = "Samoa" },
                        new { Id = new Guid("00004d53-0000-0000-0000-000000000000"), IsoName = "SM", ShortName = "San Marino" },
                        new { Id = new Guid("00005453-0000-0000-0000-000000000000"), IsoName = "ST", ShortName = "São Tomé und Príncipe" },
                        new { Id = new Guid("00004153-0000-0000-0000-000000000000"), IsoName = "SA", ShortName = "Saudi-Arabien" },
                        new { Id = new Guid("00004553-0000-0000-0000-000000000000"), IsoName = "SE", ShortName = "Schweden" },
                        new { Id = new Guid("00004843-0000-0000-0000-000000000000"), IsoName = "CH", ShortName = "Schweiz" },
                        new { Id = new Guid("00004e53-0000-0000-0000-000000000000"), IsoName = "SN", ShortName = "Senegal" },
                        new { Id = new Guid("00005352-0000-0000-0000-000000000000"), IsoName = "RS", ShortName = "Serbien" },
                        new { Id = new Guid("00004353-0000-0000-0000-000000000000"), IsoName = "SC", ShortName = "Seychellen" },
                        new { Id = new Guid("00004c53-0000-0000-0000-000000000000"), IsoName = "SL", ShortName = "Sierra Leone" },
                        new { Id = new Guid("0000575a-0000-0000-0000-000000000000"), IsoName = "ZW", ShortName = "Simbabwe" },
                        new { Id = new Guid("00004753-0000-0000-0000-000000000000"), IsoName = "SG", ShortName = "Singapur" },
                        new { Id = new Guid("00004b53-0000-0000-0000-000000000000"), IsoName = "SK", ShortName = "Slowakei" },
                        new { Id = new Guid("00004953-0000-0000-0000-000000000000"), IsoName = "SI", ShortName = "Slowenien" },
                        new { Id = new Guid("00004f53-0000-0000-0000-000000000000"), IsoName = "SO", ShortName = "Somalia" },
                        new { Id = new Guid("00005345-0000-0000-0000-000000000000"), IsoName = "ES", ShortName = "Spanien" },
                        new { Id = new Guid("00004b4c-0000-0000-0000-000000000000"), IsoName = "LK", ShortName = "Sri Lanka" },
                        new { Id = new Guid("00004e4b-0000-0000-0000-000000000000"), IsoName = "KN", ShortName = "St. Kitts und Nevis" },
                        new { Id = new Guid("0000434c-0000-0000-0000-000000000000"), IsoName = "LC", ShortName = "St. Lucia" },
                        new { Id = new Guid("00004356-0000-0000-0000-000000000000"), IsoName = "VC", ShortName = "St. Vincent und die Grenadinen" },
                        new { Id = new Guid("0000415a-0000-0000-0000-000000000000"), IsoName = "ZA", ShortName = "Südafrika" },
                        new { Id = new Guid("00004453-0000-0000-0000-000000000000"), IsoName = "SD", ShortName = "Sudan" },
                        new { Id = new Guid("00005353-0000-0000-0000-000000000000"), IsoName = "SS", ShortName = "Südsudan" },
                        new { Id = new Guid("00005253-0000-0000-0000-000000000000"), IsoName = "SR", ShortName = "Suriname" },
                        new { Id = new Guid("00005a53-0000-0000-0000-000000000000"), IsoName = "SZ", ShortName = "Swasiland" },
                        new { Id = new Guid("00005953-0000-0000-0000-000000000000"), IsoName = "SY", ShortName = "Syrien" },
                        new { Id = new Guid("00004a54-0000-0000-0000-000000000000"), IsoName = "TJ", ShortName = "Tadschikistan" },
                        new { Id = new Guid("00005a54-0000-0000-0000-000000000000"), IsoName = "TZ", ShortName = "Tansania" },
                        new { Id = new Guid("00004854-0000-0000-0000-000000000000"), IsoName = "TH", ShortName = "Thailand" },
                        new { Id = new Guid("00004754-0000-0000-0000-000000000000"), IsoName = "TG", ShortName = "Togo" },
                        new { Id = new Guid("00004f54-0000-0000-0000-000000000000"), IsoName = "TO", ShortName = "Tonga" },
                        new { Id = new Guid("00005454-0000-0000-0000-000000000000"), IsoName = "TT", ShortName = "Trinidad und Tobago" },
                        new { Id = new Guid("00004454-0000-0000-0000-000000000000"), IsoName = "TD", ShortName = "Tschad" },
                        new { Id = new Guid("00005a43-0000-0000-0000-000000000000"), IsoName = "CZ", ShortName = "Tschechien" },
                        new { Id = new Guid("00004e54-0000-0000-0000-000000000000"), IsoName = "TN", ShortName = "Tunesien" },
                        new { Id = new Guid("00005254-0000-0000-0000-000000000000"), IsoName = "TR", ShortName = "Türkei" },
                        new { Id = new Guid("00004d54-0000-0000-0000-000000000000"), IsoName = "TM", ShortName = "Turkmenistan" },
                        new { Id = new Guid("00005654-0000-0000-0000-000000000000"), IsoName = "TV", ShortName = "Tuvalu" },
                        new { Id = new Guid("00004755-0000-0000-0000-000000000000"), IsoName = "UG", ShortName = "Uganda" },
                        new { Id = new Guid("00004155-0000-0000-0000-000000000000"), IsoName = "UA", ShortName = "Ukraine" },
                        new { Id = new Guid("00005548-0000-0000-0000-000000000000"), IsoName = "HU", ShortName = "Ungarn" },
                        new { Id = new Guid("00005955-0000-0000-0000-000000000000"), IsoName = "UY", ShortName = "Uruguay" },
                        new { Id = new Guid("00005a55-0000-0000-0000-000000000000"), IsoName = "UZ", ShortName = "Usbekistan" },
                        new { Id = new Guid("00005556-0000-0000-0000-000000000000"), IsoName = "VU", ShortName = "Vanuatu" },
                        new { Id = new Guid("00004556-0000-0000-0000-000000000000"), IsoName = "VE", ShortName = "Venezuela" },
                        new { Id = new Guid("00004541-0000-0000-0000-000000000000"), IsoName = "AE", ShortName = "Vereinigte Arabische Emirate" },
                        new { Id = new Guid("00005355-0000-0000-0000-000000000000"), IsoName = "US", ShortName = "Vereinigte Staaten" },
                        new { Id = new Guid("00004247-0000-0000-0000-000000000000"), IsoName = "GB", ShortName = "Vereinigtes Königreich" },
                        new { Id = new Guid("00004e56-0000-0000-0000-000000000000"), IsoName = "VN", ShortName = "Vietnam" },
                        new { Id = new Guid("00004643-0000-0000-0000-000000000000"), IsoName = "CF", ShortName = "Zentral­afrikanische Republik" },
                        new { Id = new Guid("00005943-0000-0000-0000-000000000000"), IsoName = "CY", ShortName = "Zypern" }
                    );
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.DomainOfInfluence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("DomainOfInfluenceType");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OfficialId");

                    b.Property<string>("ShortName")
                        .IsRequired();

                    b.Property<string>("TenantId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("DomainsOfInfluence");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.DomainOfInfluenceElection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("DomainOfInfluenceId");

                    b.Property<Guid>("ElectionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int>("NumberOfMandates");

                    b.HasKey("Id");

                    b.HasAlternateKey("ElectionId", "DomainOfInfluenceId");

                    b.HasIndex("DomainOfInfluenceId");

                    b.ToTable("DomainOfInfluenceElections");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Election", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ContestDate");

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<int>("ElectionType");

                    b.Property<bool>("FileUploadActivated");

                    b.Property<string>("FileUploadDescription");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<bool>("NoQuorumRequired");

                    b.Property<int?>("QuorumSignaturesCount");

                    b.Property<int>("State");

                    b.Property<DateTime>("SubmissionDeadlineBegin");

                    b.Property<DateTime>("SubmissionDeadlineEnd");

                    b.Property<string>("TenantId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ElectionQuorumExemption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("ElectionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("PartyTenantId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("ElectionQuorumExemptions");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.InfoText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid?>("ElectionId");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("TenantId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.Property<bool>("Visible");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("InfoTexts");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.List", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<List<string>>("DeputyUsers");

                    b.Property<string>("Description");

                    b.Property<Guid>("ElectionId");

                    b.Property<int>("Indenture");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("ResponsiblePartyTenantId")
                        .IsRequired();

                    b.Property<int>("SortOrder");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.HasIndex("ElectionId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("ListId");

                    b.Property<string>("ListUnionDescription");

                    b.Property<Guid>("ListUnionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("ListUnionId");

                    b.ToTable("ListUnions");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnionElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("ListId");

                    b.Property<Guid>("ListUnionId");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("ListUnionId");

                    b.ToTable("ListUnionElements");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.MarkedElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<Guid>("ReferenceId");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MarkedElements");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.BallotDocument", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("Documents")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.List")
                        .WithMany("ElectionDocuments")
                        .HasForeignKey("ListId");
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.Candidate", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Country", "Country")
                        .WithMany("Candidates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.List", "List")
                        .WithMany("Candidates")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.DomainOfInfluenceElection", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.DomainOfInfluence", "DomainOfInfluence")
                        .WithMany("ParticipatingElections")
                        .HasForeignKey("DomainOfInfluenceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("DomainsOfInfluence")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ElectionQuorumExemption", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("QuorumExemptions")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.InfoText", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("InfoTexts")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.List", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.Election", "Election")
                        .WithMany("Lists")
                        .HasForeignKey("ElectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnion", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.List", "ReferencedList")
                        .WithMany("ListUnions")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.ListUnion", "ReferencedUnion")
                        .WithMany("ListUnionParticipations")
                        .HasForeignKey("ListUnionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eawv.Service.DataAccess.Entities.ListUnionElement", b =>
                {
                    b.HasOne("Eawv.Service.DataAccess.Entities.List", "ReferencedList")
                        .WithMany("ListUnionElements")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Eawv.Service.DataAccess.Entities.ListUnion", "ReferencedUnion")
                        .WithMany("ListUnionElements")
                        .HasForeignKey("ListUnionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
